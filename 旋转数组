# 拼接法
class Solution(object):
    def rotate(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: None Do not return anything, modify nums in-place instead.
        """
        a = k % len(nums)
        nums[:] = nums[ -a: ] + nums[ :-a] 
        
 # 增删法      
class Solution(object):
    def rotate(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: None Do not return anything, modify nums in-place instead.
        """
        for i in range(k%len(nums)):
            nums.insert(0,nums[-1])
            nums.pop()
            
# 元素替换法
class Solution(object):
    def rotate(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: None Do not return anything, modify nums in-place instead.
        """
        a = nums[:]
        if k == 0 or k%len(nums) == 0 or len(nums) == 1 :
            return nums
        else :
            for i in range(len(nums)):
                nums[(i+k) % len(nums)] = a[i]
