# 方法一：
class Solution(object):
    def climbStairs(self, n):
        """
        :type n: int
        :rtype: int
        """
        dp = [0]*(n+1)  #如果用dp[i] = dp[i-1] + dp[i-2]，需要创建个长度为n+1的dp
        if n == 0 :
            return 0
        if n == 1 :
            return 1
        if n == 2 :
            return 2
        dp[0] = 0
        dp[1] = 1
        dp[2] = 2
        for i in range(3,n+1):
            dp[i] = dp[i-1] + dp[i-2]
        return dp[-1]
        
# 方法二：
class Solution(object):
    def climbStairs(self, n):
        """
        :type n: int
        :rtype: int
        """
        if n == 0 :
            return 0
        if n == 1 :
            return 1
        if n == 2 :
            return 2
        dp = [0,1,2]
        for i in range(3,n+1):
            dp.append(dp[-1] + dp[-2])  # 注意和方法一的区别
        return dp[-1]
